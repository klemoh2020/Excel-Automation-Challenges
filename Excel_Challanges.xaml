<Activity mc:Ignorable="sap sap2010" x:Class="Excel_Challanges" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="509.142857142857,2151.42857142857" sap2010:WorkflowViewState.IdRef="Excel_Challanges_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Excel_Challanges" sap:VirtualizedContainerService.HintSize="518.857142857143,2086.28571428571" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="Excel Open: Use Application Scope" sap:VirtualizedContainerService.HintSize="518.857142857143,872" sap2010:WorkflowViewState.IdRef="Sequence_15">
      <Sequence.Variables>
        <Variable x:TypeArguments="sd:DataTable" Name="additionDTA" />
        <Variable x:TypeArguments="ui:GenericValue" Name="ColumnA1" />
        <Variable x:TypeArguments="ui:GenericValue" Name="ColumnB1" />
        <Variable x:TypeArguments="x:Int32" Default="1" Name="counterA" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:ExcelApplicationScope Password="{x:Null}" AutoSave="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="476.571428571429,52.5714285714286" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_3" InstanceCachePeriod="3000" WorkbookPath="Sample ColumnsA.xlsx">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="476.571428571429,1009.14285714286" sap2010:WorkflowViewState.IdRef="Sequence_10">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ExcelReadRange AddHeaders="False" DataTable="[additionDTA]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="434.285714285714,58.2857142857143" sap2010:WorkflowViewState.IdRef="ExcelReadRange_2" SheetName="Sheet1">
                <ui:ExcelReadRange.Range>
                  <InArgument x:TypeArguments="x:String">
                    <Literal x:TypeArguments="x:String" Value="" />
                  </InArgument>
                </ui:ExcelReadRange.Range>
              </ui:ExcelReadRange>
              <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[AdditionDTA]" DisplayName="For Each Row in Addition Data Table" sap:VirtualizedContainerService.HintSize="434.285714285714,819.428571428571" sap2010:WorkflowViewState.IdRef="ForEachRow_3">
                <ui:ForEachRow.Body>
                  <ActivityAction x:TypeArguments="sd:DataRow">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376.571428571429,704" sap2010:WorkflowViewState.IdRef="Sequence_9">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="ui:GenericValue" Name="SumInCA" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:GetRowItem Column="{x:Null}" ColumnName="{x:Null}" ColumnIndex="0" DisplayName=" Get Row Item:ColumnA" sap:VirtualizedContainerService.HintSize="334.285714285714,52.5714285714286" sap2010:WorkflowViewState.IdRef="GetRowItem_5" Row="[row]">
                        <ui:GetRowItem.Value>
                          <OutArgument x:TypeArguments="ui:GenericValue">[ColumnA1]</OutArgument>
                        </ui:GetRowItem.Value>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:GetRowItem>
                      <ui:GetRowItem Column="{x:Null}" ColumnName="{x:Null}" ColumnIndex="1" DisplayName="Get Row Item:ColumnB" sap:VirtualizedContainerService.HintSize="334.285714285714,191.428571428571" sap2010:WorkflowViewState.IdRef="GetRowItem_6" Row="[row]">
                        <ui:GetRowItem.Value>
                          <OutArgument x:TypeArguments="ui:GenericValue">[ColumnB1]</OutArgument>
                        </ui:GetRowItem.Value>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:GetRowItem>
                      <Assign sap:VirtualizedContainerService.HintSize="334.285714285714,61.1428571428571" sap2010:WorkflowViewState.IdRef="Assign_5">
                        <Assign.To>
                          <OutArgument x:TypeArguments="ui:GenericValue">[SumInCA]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="ui:GenericValue">[ColumnA1+ColumnB1]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:ExcelWriteCell Cell="[&quot;C&quot;+ counterA.ToString]" DisplayName="Write the Content of SumInC Variable to Column C and increase the C index by 1" sap:VirtualizedContainerService.HintSize="334.285714285714,86.2857142857143" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_3" SheetName="Sheet1" Text="[SumInCA]" />
                      <Assign sap:VirtualizedContainerService.HintSize="334.285714285714,61.1428571428571" sap2010:WorkflowViewState.IdRef="Assign_6">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">[counterA]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">[counterA+1]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEachRow.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ForEachRow>
            </Sequence>
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExcelApplicationScope>
      <Sequence DisplayName="IP_Excel Closed: Use Workbook" sap:VirtualizedContainerService.HintSize="476.571428571429,270.285714285714" sap2010:WorkflowViewState.IdRef="Sequence_12">
        <Sequence.Variables>
          <Variable x:TypeArguments="sd:DataTable" Name="additionDT" />
          <Variable x:TypeArguments="x:Int32" Default="1" Name="counter" />
          <Variable x:TypeArguments="ui:GenericValue" Name="ColumnA" />
          <Variable x:TypeArguments="ui:GenericValue" Name="ColumnB" />
          <Variable x:TypeArguments="ui:GenericValue" Name="SumInC" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:ReadRange Range="{x:Null}" AddHeaders="False" DataTable="[additionDT]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334.285714285714,86.2857142857143" sap2010:WorkflowViewState.IdRef="ReadRange_2" SheetName="Sheet1" WorkbookPath="Sample ColumnsB.xlsx" />
        <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[additionDT]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="334.285714285714,52.5714285714286" sap2010:WorkflowViewState.IdRef="ForEachRow_4">
          <ui:ForEachRow.Body>
            <ActivityAction x:TypeArguments="sd:DataRow">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="Row" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Getting Column Values and Storing as Variables" sap:VirtualizedContainerService.HintSize="376.571428571429,593.142857142857" sap2010:WorkflowViewState.IdRef="Sequence_11">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:GetRowItem Column="{x:Null}" ColumnName="{x:Null}" ColumnIndex="0" DisplayName="Get Column A Values and store in Variable ColumnA" sap:VirtualizedContainerService.HintSize="334.285714285714,52.5714285714286" sap2010:WorkflowViewState.IdRef="GetRowItem_7" Row="[Row]">
                  <ui:GetRowItem.Value>
                    <OutArgument x:TypeArguments="ui:GenericValue">[ColumnA]</OutArgument>
                  </ui:GetRowItem.Value>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:GetRowItem>
                <ui:GetRowItem Column="{x:Null}" ColumnName="{x:Null}" ColumnIndex="1" DisplayName="Get Column B Values and store in Variable ColumnB" sap:VirtualizedContainerService.HintSize="334.285714285714,52.5714285714286" sap2010:WorkflowViewState.IdRef="GetRowItem_8" Row="[Row]">
                  <ui:GetRowItem.Value>
                    <OutArgument x:TypeArguments="ui:GenericValue">[ColumnB]</OutArgument>
                  </ui:GetRowItem.Value>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:GetRowItem>
                <Assign DisplayName="Summation and Storing Values in New Variable SumInC" sap:VirtualizedContainerService.HintSize="334.285714285714,61.1428571428571" sap2010:WorkflowViewState.IdRef="Assign_7">
                  <Assign.To>
                    <OutArgument x:TypeArguments="ui:GenericValue">[SumInC]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="ui:GenericValue">[ColumnA + ColumnB]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:WriteCell Cell="[&quot;C&quot;+counter.ToString]" DisplayName="Writes The Content of SumInC in Sheet1 and Incrementing the Cell" sap:VirtualizedContainerService.HintSize="334.285714285714,114.285714285714" sap2010:WorkflowViewState.IdRef="WriteCell_2" SheetName="Sheet1" Text="[SumInC]" WorkbookPath="Sample ColumnsB.xlsx" />
                <Assign DisplayName="Assign: Increment the cell to output the Variable content to the next Cell." sap:VirtualizedContainerService.HintSize="334.285714285714,61.1428571428571" sap2010:WorkflowViewState.IdRef="Assign_8">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[counter]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">[counter +1]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </ActivityAction>
          </ui:ForEachRow.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ForEachRow>
      </Sequence>
      <Sequence DisplayName="IP_Challange1: Use Excel Formulae" sap:VirtualizedContainerService.HintSize="476.571428571429,377.714285714286" sap2010:WorkflowViewState.IdRef="Sequence_14">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="434.285714285714,286.285714285714" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_4" InstanceCachePeriod="3000" WorkbookPath="Sample ColumnsC.xlsx">
          <ui:ExcelApplicationScope.Body>
            <ActivityAction x:TypeArguments="ui:WorkbookApplication">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Use Excel Formula to compute the summation on ColA and ColB" sap:VirtualizedContainerService.HintSize="376.571428571429,177.714285714286" sap2010:WorkflowViewState.IdRef="Sequence_13">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ExcelWriteCell Cell="C1:C11" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334.285714285714,86.2857142857143" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_4" SheetName="Sheet1" Text="=Sum(A1:B1)" />
              </Sequence>
            </ActivityAction>
          </ui:ExcelApplicationScope.Body>
        </ui:ExcelApplicationScope>
      </Sequence>
    </Sequence>
    <Sequence sap:VirtualizedContainerService.HintSize="476.571428571429,1885.14285714286" sap2010:WorkflowViewState.IdRef="Sequence_18">
      <Sequence.Variables>
        <Variable x:TypeArguments="sd:DataTable" Name="CardPaymentDT" />
        <Variable x:TypeArguments="sd:DataTable" Name="CashPaymentDT" />
        <Variable x:TypeArguments="sd:DataTable" Name="ExpenseDTsum" />
        <Variable x:TypeArguments="sd:DataTable" Name="ExpenseSum" />
        <Variable x:TypeArguments="sd:DataTable" Name="GroupedDT" />
        <Variable x:TypeArguments="sd:DataTable" Name="CombinedExpenseDT" />
        <Variable x:TypeArguments="x:Int32" Name="GroupedDTSum" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[CardPaymentDT]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="434.285714285714,86.2857142857143" sap2010:WorkflowViewState.IdRef="ReadRange_3" SheetName="Sheet1" WorkbookPath="CardPayments.xlsx" />
      <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[CashPaymentDT]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="434.285714285714,86.2857142857143" sap2010:WorkflowViewState.IdRef="ReadRange_4" SheetName="Sheet1" WorkbookPath="CashPayments.xlsx" />
      <ui:MergeDataTable Destination="[CashPaymentDT]" DisplayName="Merge Data Table" sap:VirtualizedContainerService.HintSize="434.285714285714,136" sap2010:WorkflowViewState.IdRef="MergeDataTable_1" MissingSchemaAction="Add" Source="[CardPaymentDT]" />
      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="434.285714285714,286.285714285714" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_5" InstanceCachePeriod="3000" WorkbookPath="CombinedTable.xlsx">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376.571428571429,177.714285714286" sap2010:WorkflowViewState.IdRef="Sequence_16">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ExcelWriteRange AddHeaders="True" DataTable="[CashPaymentDT]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334.285714285714,86.2857142857143" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_1" SheetName="CombinedTable" StartingCell="A1" />
            </Sequence>
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
      </ui:ExcelApplicationScope>
      <ui:BuildDataTable DataTable="[GroupedDT]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="434.285714285714,58.2857142857143" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Expenses&quot; msdata:Caption=&quot;&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Value&quot; msdata:Caption=&quot;&quot; type=&quot;xs:int&quot; /&gt;&#xA;                &lt;xs:element name=&quot;_x0025_Spending&quot; msdata:Caption=&quot;&quot; type=&quot;xs:int&quot; default=&quot;1&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="434.285714285714,940.571428571429" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_6" InstanceCachePeriod="3000" WorkbookPath="CombinedTable.xlsx">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376.571428571429,832" sap2010:WorkflowViewState.IdRef="Sequence_17">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ExcelReadRange AddHeaders="True" DataTable="[CombinedExpenseDT]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334.285714285714,58.2857142857143" sap2010:WorkflowViewState.IdRef="ExcelReadRange_3" SheetName="CombinedTable">
                <ui:ExcelReadRange.Range>
                  <InArgument x:TypeArguments="x:String">
                    <Literal x:TypeArguments="x:String" Value="" />
                  </InArgument>
                </ui:ExcelReadRange.Range>
              </ui:ExcelReadRange>
              <Assign DisplayName="Group by Expense and Remove Duplicates" sap:VirtualizedContainerService.HintSize="334.285714285714,64" sap2010:WorkflowViewState.IdRef="Assign_9">
                <Assign.To>
                  <OutArgument x:TypeArguments="sd:DataTable">[GroupedDT]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="sd:DataTable" xml:space="preserve">[(From p In CombinedExpenseDT.AsEnumerable()
Group By
col1=p("Expense").ToString
Into Group
Select GroupedDT.Rows.Add({col1, Group.sum(Function(r)Convert.ToDouble(r("Value").ToString))})).CopyToDatatable]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:ExcelWriteRange AddHeaders="True" DataTable="[GroupedDT]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334.285714285714,86.2857142857143" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_2" SheetName="Sheet1" StartingCell="A1" />
              <ui:ExcelReadRange AddHeaders="True" DataTable="[ExpenseSum]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334.285714285714,58.2857142857143" sap2010:WorkflowViewState.IdRef="ExcelReadRange_4" SheetName="Sheet1">
                <ui:ExcelReadRange.Range>
                  <InArgument x:TypeArguments="x:String">
                    <Literal x:TypeArguments="x:String" Value="" />
                  </InArgument>
                </ui:ExcelReadRange.Range>
              </ui:ExcelReadRange>
              <Assign sap:VirtualizedContainerService.HintSize="334.285714285714,61.1428571428571" sap2010:WorkflowViewState.IdRef="Assign_10">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[GroupedDTSum]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[ExpenseSum.AsEnumerable.sum(function(row)Cint(row("Value")))]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:ExcelWriteCell Cell="B13" DisplayName="Write Cell: Save the Total Summation after Grouping" sap:VirtualizedContainerService.HintSize="334.285714285714,86.2857142857143" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_5" SheetName="Sheet1" Text="[GroupedDTSum.ToString]" />
              <ui:ExcelWriteCell Cell="C2:C12" DisplayName="Write Cell: Compute for Expenses by %tages" sap:VirtualizedContainerService.HintSize="334.285714285714,86.2857142857143" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_6" SheetName="Sheet1" Text="=(B2/$B$13)*100" />
            </Sequence>
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
      </ui:ExcelApplicationScope>
    </Sequence>
  </Sequence>
</Activity>